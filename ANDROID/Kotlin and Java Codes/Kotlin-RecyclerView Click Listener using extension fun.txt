

// RecyclerView Click Listener


//Interface
interface OnItemClickListener {
    fun onItemClicked(position: Int, view: View)
}


//extension fun
fun RecyclerView.addOnItemClickListener(onClickListener: OnItemClickListener) {
    this.addOnChildAttachStateChangeListener(object: RecyclerView.OnChildAttachStateChangeListener {
        override fun onChildViewDetachedFromWindow(view: View) {
            view.setOnClickListener(null)
        }

        override fun onChildViewAttachedToWindow(view: View) {
            view.setOnClickListener {
                val holder = getChildViewHolder(view)
                onClickListener.onItemClicked(holder.adapterPosition, view)
            }
        }
    })
}



// how to use

recyclerView.addOnItemClickListener(object: OnItemClickListener {
    override fun onItemClicked(position: Int, view: View) {
        // Your logic
    }
})